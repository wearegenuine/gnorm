// ================================== //
//    #UTILITY - COLORS
//
// Note: the palette function is included here (vs in the tools directory)
// since both of these are needed in order to work properly
// ================================== //

@function palette($palette, $tone: 'base') {
  @return map-get(map-get(map-get($palettes, colors), $palette), $tone);
}

$palettes: (
  colors: (
    black: (
      base: #000
    ),
    white: (
      base: #fff
    ),
    gray: (
      light: #d3d3d3,
      base: #bebebe,
      dark: #a9a9a9
    ),
    blue: (
      base: #0074D9
    )
  )
);

$white:   palette(white);
$black:   palette(black);

/** Ex. Light brown
p {
  color: palette(brown, light);
}
**/


// Returns flattened $palettes color map
@function get-flat-palette($map) {
  $colors: ();
  @each $color, $value in map-get($map, colors) {
    @each $name, $tone in $value {
      // key for "base" color is the color name itself, e.g. "gray"
      // key for other tones combines color and tone name, e.g. "gray-light"
      $key: if($name == "base", $color, $color + "-" + $name);
      $colors: map-merge($colors, ($key: $tone));
    }
  }
  @return $colors;
}

// Save palette as flat map, used by style-guide.scss and variables.scss
$color-map: get-flat-palette($palettes);
